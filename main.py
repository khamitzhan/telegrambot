from aiogram import Bot, Dispatcher, executor, types
from config import TOKEN, ADMIN_ID, WALLET

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞ –≤ USDT (TRC20).")
    await message.answer(f"üí∏ –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞: `{WALLET}`", parse_mode="Markdown")

@dp.message_handler(commands=["help"])
async def help_cmd(message: types.Message):
    await message.answer("/start ‚Äî –Ω–∞—á–∞—Ç—å\n/help ‚Äî –ø–æ–º–æ—â—å\n/status ‚Äî —Å—Ç–∞—Ç—É—Å –¥–µ–ø–æ–∑–∏—Ç–∞")

@dp.message_handler(commands=["status"])
async def status_cmd(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer("üîç –ü–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
    else:
        await message.answer("üîê –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Ç–∞—Ç—É—Å.")

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
